{"version":3,"sources":["ContentFont.js","Button.js","Page1.js","Page2.js","ProjectTitle.js","ProjectSemiTitle.js","TechBtn.js","Page3.js","Page4.js","Page5.js","Page6.js","App.js","contexts/pageTransContext.js","serviceWorker.js","index.js"],"names":["ContentFont","text","className","Button","url","onClick","window","open","Page1","to","React","Component","Page2","state","number","this","setState","timer","setInterval","changeText","ProjectTitle","ProjectSemiTitle","TechBtn","Page3","Page4","src","Page5","href","history","createBrowserHistory","classNames","appear","appearActive","appearDone","enter","enterActive","enterDone","exit","exitActive","exitDone","App","basename","render","location","TransitionGroup","CSSTransition","key","pathname","timeout","exact","path","component","Page6","PageTransContext","createContext","PageTransProvider","props","children","useState","pageTrans","setPageTrans","Provider","value","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54397138.chunk.js","sourcesContent":["import React from 'react';\nimport './Main.css';\n\nconst ContentFont = ( {text} ) => {\n    return  <div className=\"content-font orange-color three-rem\">{text}</div>\n\n};\n\nexport default ContentFont;","import React from 'react';\nimport './Main.css';\n\nconst Button = ( {text, url} ) => {\n    const goToURL = () => {\n        window.open(url)\n    }\n    return <div className=\"btn content-font column-div orange-color bold margin-3\" onClick={goToURL}>{text}</div>\n};\n\nexport default Button;","import React from 'react';\nimport './Main.css';\nimport ContentFont from './ContentFont';\nimport Button from './Button';\nimport { Link } from 'react-router-dom';\n\nclass Page1 extends React.Component {\n    render() {\n        return (\n            <div className=\"page row-div\">\n                <div className=\"column-div width-90\">\n                    <ContentFont text=\"Front-End Developer 김영조의 포트폴리오 입니다.\" />\n                    <div className=\"row-div width-100\">\n                        <Button text=\"Github\" url=\"https://github.com/yoyounn18\" />\n                        <Button text=\"Blog\" url=\"https://blex.kr/@yoyounn18\" />\n                    </div>\n                </div>\n                <div className=\"orange-color content-font one-rem column-div margin-05\">\n                    <Link to=\"/2\"><span className=\"orange-color\">>></span></Link>\n                    <Link to=\"/2\"><span className=\"orange-color\">Next</span></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Page1;","import React from 'react';\nimport './Main.css';\nimport ContentFont from './ContentFont';\nimport { Link } from 'react-router-dom';\n\nclass Page2 extends React.Component {\n    state = {\n        number: 0\n    }\n    changeText() {\n        if(this.state.number >= 0){\n            this.setState({\n                number: this.state.number + 1,            \n            })\n        }\n        if(this.state.number > 6){\n            this.setState({\n                number: 0\n            })\n        }\n    }\n    componentDidMount() {\n        const interval = 4000;\n\n        this.timer = setInterval(\n            () => this.changeText(), interval\n        );\n    }\n    render() {\n        const arrText = [ 'React', 'Javascript', 'ES6', 'HTML', 'CSS', 'Bootstrap', 'JQuery'];\n        return (\n            <div className=\"page\">\n                <div className=\"row-div\">\n                    <div className=\"row-div tech-font blink-text orange-color width-90\">\n                        <ContentFont text=\"My Tech Stack : \" />\n                        <div className=\"tech-content-div column-div margin-3 width-15\">\n                            {arrText[this.state.number]}\n                        </div>\n                    </div>\n                    <div className=\"orange-color content-font one-rem column-div margin-05\">\n                        <Link to=\"/3\"><span className=\"orange-color\">>></span></Link>\n                        <Link to=\"/3\"><span className=\"orange-color\">Next</span></Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Page2;","import React from 'react';\n\nconst ProjectTitle = ({text}) => {\n    return <div className=\"content-font orange-color two-rem bold\">{text}</div>\n};\n\nexport default ProjectTitle;","import React from 'react';\nimport './Main.css';\n\nconst ProjectSemiTitle = ({text}) => {\n    return <div className=\"orange-color bold one-rem\">{text}</div>\n};\n\nexport default ProjectSemiTitle;","import React from 'react';\n\nconst TechBtn = ({text}) => {\n    return <div className=\"orange-color tech-btn column-div\">{text}</div>\n};\n\nexport default TechBtn;","import React from 'react';\nimport './Main.css';\nimport ProjectTitle from './ProjectTitle';\nimport ReactPlayer from 'react-player';\nimport Button from './Button';\nimport ProjectSemiTitle from './ProjectSemiTitle';\nimport TechBtn from './TechBtn';\nimport { Link } from 'react-router-dom';\n\nclass Page3 extends React.Component {\n    render() {\n        return (\n            <div className=\"page row-div\">\n                <div className=\"project-div column-div\">\n                        <ReactPlayer url=\"https://www.youtube.com/watch?v=ne8V5yhDHdE\" />\n                        <div className=\"width-50 row-div\">\n                            <Button text=\"Github\" url=\"https://github.com/yoyounn18/Jarani\" />\n                    </div>\n                </div>\n                <div className=\"project-div column-div\">\n                    <ProjectTitle text=\"자전거 후방 지시등 및 거리 감지 모듈\" />\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"개요\" />\n                        > 졸업과제 프로젝트로 진행한 Arduino와 AppInventor를 활용한 자전거 후방 지시등 및 거리 감지 모듈을 제작\n                    </div>\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"맡은 역할\" />\n                        > 맞춤 app 개발 <br></br>\n                        > Github 관리 <br></br>\n                        > Arduino 모듈 일부 설계\n                    </div>\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"사용 기술\" />\n                        <div className=\"tech-divdiv\">\n                            <TechBtn text=\"Arduino\" />\n                            <TechBtn text=\"Java\" />\n                            <TechBtn text=\"C\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"orange-color content-font one-rem column-div margin-05\">\n                    <Link to=\"/4\"><span className=\"orange-color\">>></span></Link>\n                    <Link to=\"/4\"><span className=\"orange-color\">Next</span></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Page3;","import React from 'react';\nimport './Main.css';\nimport ProjectTitle from './ProjectTitle';\nimport ReactPlayer from 'react-player';\nimport Button from './Button';\nimport ProjectSemiTitle from './ProjectSemiTitle';\nimport TechBtn from './TechBtn';\nimport { Link } from 'react-router-dom';\n\nclass Page4 extends React.Component {\n    render() {\n        return (\n            <div className=\"page row-div\">\n                <div className=\"project-div column-div\">\n                        <img src=\"howabout.png\" />\n                        <div className=\"width-50 row-div\">\n                            <Button text=\"Github\" url=\"https://github.com/stylish-sys/HowAboutPotato-\" />\n                        </div>\n                </div>\n                <div className=\"project-div column-div\">\n                    <ProjectTitle text=\"How About Potato\" />\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"개요\" />\n                        > 교내 학생 4명으로 구성된 팀으로. Spring 프레임워크 기반 웹 프로젝트를 진행했습니다. 주제는 숙박업 예매사이트로 숙박업소의 등록과 위치 검색 등이 탑재되어 있습니다.\n                    </div>\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"맡은 역할\" />\n                        > Front-End 담당 <br></br>\n                        > Github 관리\n                    </div>\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"사용 기술\" />\n                        <div className=\"tech-divdiv\">\n                            <TechBtn text=\"Spring\" />\n                            <TechBtn text=\"JQuery\" />\n                            <TechBtn text=\"Java\" />\n                            <TechBtn text=\"HTML\" />\n                            <TechBtn text=\"CSS\" />\n                            <TechBtn text=\"Javascript\" />\n                            <TechBtn text=\"MySQL\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"orange-color content-font one-rem column-div margin-05\">\n                    <Link to=\"/5\"><span className=\"orange-color\">>></span></Link>\n                    <Link to=\"/5\"><span className=\"orange-color\">Next</span></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Page4;","import React from 'react';\nimport './Main.css';\nimport ProjectTitle from './ProjectTitle';\nimport ReactPlayer from 'react-player';\nimport Button from './Button';\nimport ProjectSemiTitle from './ProjectSemiTitle';\nimport TechBtn from './TechBtn';\nimport { Link } from 'react-router-dom';\n\nclass Page5 extends React.Component {\n    render() {\n        return (\n            <div className=\"page row-div\">\n                <div className=\"project-div column-div\">\n                        <img src=\"owen.png\" />\n                        <div className=\"width-50 row-div\">\n                            <Button text=\"Github\" url=\"https://github.com/yoyounn18/SPA-Toy-Project\" />\n                            <Button text=\"Website\" url=\"https://yoyounn18.github.io/SPA-Toy-Project/\" />\n                        </div>\n                </div>\n                <div className=\"project-div column-div\">\n                    <ProjectTitle text=\"Owen Fan Page\" />\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"개요\" />\n                        > 개인 프로젝트로, React의 핵심인 SPA를 활용하여 여러가지의 페이지로 구성된 fan page를 만드는 프로젝트를 진행했습니다.\n                    </div>\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"맡은 역할\" />\n                        > 총괄 (개인 프로젝트)\n                    </div>\n                    <div className=\"project-content-content orange-color margin-3 width-45\">\n                        <ProjectSemiTitle text=\"사용 기술\" />\n                        <div className=\"tech-divdiv\">\n                            <TechBtn text=\"React\" />\n                            <TechBtn text=\"ES6\" />\n                            <TechBtn text=\"CSS\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"orange-color content-font one-rem column-div margin-05\">\n                    <Link to=\"/6\"><span className=\"orange-color\">>></span></Link>\n                    <Link to=\"/6\"><span className=\"orange-color\">Next</span></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Page5;","import React from 'react';\nimport './Main.css';\nimport Button from './Button';\n\nclass Page4 extends React.Component {\n    render() {\n        return (\n            <div className=\"page column-div\">\n                <a href=\"mailto:yoyounn88@gmail.com\"><span className=\"orange-color two-rem content-font bold\">yoyounn88@gmail.com</span></a>\n                <span className=\"orange-color one-rem content-font margin-05\">누구보다 열정적으로 일할 준비가 되어있고, 그렇게 하고싶습니다.</span>\n                <span className=\"orange-color one-rem content-font\">정말 최선을 다하겠습니다. 연락 부탁드립니다.</span>\n                <Button text=\"Résumé\" />\n            </div>\n        )\n    }\n}\n\nexport default Page4;","import React from 'react';\nimport { Switch, Route, Router, Link } from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nimport './App.scss';\nimport Page1 from './Page1';\nimport Page2 from './Page2';\nimport Page3 from './Page3';\nimport Page4 from './Page4';\nimport Page5 from './Page5';\nimport Page6 from './Page6';\n\n\nconst history = createBrowserHistory()\n\nconst pageTrans = 'trans toRight'\nconst classNames = {\n  appear: `${pageTrans} appear`,\n  appearActive: `${pageTrans} appear active`,\n  appearDone: `${pageTrans} appear done`,\n  enter: `${pageTrans} enter`,\n  enterActive: `${pageTrans} enter active`,\n  enterDone: `${pageTrans} enter done`,\n  exit: `${pageTrans} exit`,\n  exitActive: `${pageTrans} exit active`,\n  exitDone: `${pageTrans} exit done`\n}\n\nfunction App() {\n  return (\n    <Router history={history} basename = \"/kimyoungjo-portfolio\">\n      <Route\n        render={({ location }) => (\n          <TransitionGroup className='transitionGroup'>\n            <CSSTransition key={location.pathname} classNames={classNames} timeout={2000}>\n              <Switch location={location}>\n                <Route exact path=\"/\" component={Page1} />\n                <Route path=\"/2\" component={Page2} />\n                <Route path=\"/3\" component={Page3} />\n                <Route path=\"/4\" component={Page4} />\n                <Route path=\"/5\" component={Page5} />\n                <Route path=\"/6\" component={Page6} />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        )}\n      />\n    </Router>\n  );\n}\n\nexport default App;","import React, { createContext, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const PageTransContext = createContext([{}, () => {}])\n\nexport const PageTransProvider = props => {\n  const { children } = props\n  const [pageTrans, setPageTrans] = useState('trans toRight')\n  return <PageTransContext.Provider value={{ pageTrans, setPageTrans }}>{children}</PageTransContext.Provider>\n}\n\nPageTransProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default { PageTransContext, PageTransProvider }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { PageTransProvider } from './contexts/pageTransContext';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <PageTransProvider>\n    <App />\n  </PageTransProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}